Polycarp's Practice
#include<bits/stdc++.h>
using namespace std;
const int MAXN=2050;
int a[MAXN],b[MAXN],ans;
int n;
int k;
map<int, int> m;
int main()
{
    while(scanf("%d %d",&n,&k)!=EOF)
    {
        m.clear();
        for (int i = 1; i <= n;i++)
        {
            scanf("%d", &a[i]);
            b[i] = a[i];
        }
        sort(a + 1, a + 1 + n);
        ans = 0;
        int cnt = 0;
        for (int i = n; i>=n-k+1;i--)
        {
            m[a[i]]++;
            ans += a[i];
        }
        int l[2050] = {0}, r[2050] = {0};
        cnt = 0;
        l[1] = 1;
        for (int i = 1; i <= n;i++)
        {
            if(m[b[i]]>0)
            {
                m[b[i]]--;
                cnt++;
                r[cnt] = i;
                l[cnt + 1] = i + 1;
            }
        }
        printf("%d\n", ans);
        r[cnt] = n;
        for (int i = 1; i <= cnt;i++)
        {
            printf("%d ", r[i] - l[i] + 1);
        }
    }
}