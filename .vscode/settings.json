{
    "files.defaultLanguage": "cpp", // ctrl+N新建文件后默认的语言
    "editor.formatOnType": true, // 输入时就进行格式化，默认触发字符较少，分号可以触发
    "editor.snippetSuggestions": "bottom", // snippets代码优先显示补全
    "code-runner.saveFileBeforeRun": true, // run code前保存
    "code-runner.preserveFocus": false, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
    "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息
    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法输入
    "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）
    "C_Cpp.intelliSenseEngine": "Default", // 可以为Default或Tag Parser，后者较老，功能较简单。具体差别参考cpptools扩展文档
    "C_Cpp.errorSquiggles": "Enabled", // 因为有clang的lint，所以关掉
    "C_Cpp.autocomplete": "Default", // 因为有clang的补全，所以关掉
    "code-runner.executorMap": {
        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && clang++ $fileName -o c:/acm/workexe/main.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++17 && c:/acm/workexe/main.exe"
    }, // 设置code runner的命令行
    "editor.fontFamily": "Consolas, 'Courier New', monospace", // 控制编辑器字体
"workbench.colorTheme": "One Dark Pro", // 主题
"files.trimTrailingWhitespace": true, // 保存时，删除每一行末尾的空格
"workbench.colorCustomizations": {
        "activityBar.foreground": "#39C5BB" // 自定义颜色
    },
"git.enabled": true, // 如果你不用git，我建议你关闭它
"git.ignoreMissingGitWarning": true, // 同上
"editor.minimap.enabled": false, // 我个人不用minimap，就是右边那个东西
"editor.dragAndDrop": true, // 选中文字后，可以拖动它们调整位置。我是不需要
"files.autoGuessEncoding": false, // 启用后，会在打开文件时尝试猜测字符集编码。我关闭的理由见6
"[c]": {
    // "files.encoding": "gbk" // 这样的格式可以对指定后缀的文件应用设置，如果你实在想用gbk，就这样设置吧。cpp同理。
},
"files.associations": {
    "array": "cpp",
    "hash_map": "cpp",
    "hash_set": "cpp",
    "string_view": "cpp",
    "bitset": "cpp",
    "chrono": "cpp",
    "iosfwd": "cpp",
    "atomic": "cpp",
    "*.tcc": "cpp",
    "cctype": "cpp",
    "cfenv": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "complex": "cpp",
    "condition_variable": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cuchar": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "forward_list": "cpp",
    "list": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "vector": "cpp",
    "exception": "cpp",
    "fstream": "cpp",
    "functional": "cpp",
    "future": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "limits": "cpp",
    "memory": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "ostream": "cpp",
    "ratio": "cpp",
    "scoped_allocator": "cpp",
    "shared_mutex": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "system_error": "cpp",
    "thread": "cpp",
    "type_traits": "cpp",
    "tuple": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "utility": "cpp",
    "valarray": "cpp",
    "algorithm": "cpp"
},
"background.useDefault": false,
"background.customImages": [
    "file:///C:/Users/53247/Desktop/123123.png",
    "file:///C:/Users/53247/Desktop/123123.png",
    "file:///C:/Users/53247/Desktop/123123.png"
],
"background.useFront": true,
"background.style": {
    "content": "''",
    "pointer-events": "none",
    "position": "absolute",
    "z-index": "9",
    "width": "100%",
    "height": "100%",
    "background-size": "25%",
    "background-position": "100% 100%",
    "background-repeat": "no-repeat",
    "opacity": 2
},
"editor.fontSize": 19,
"git.ignoreLimitWarning": false,
"search.followSymlinks": false,
"git.autoRepositoryDetection": false,
"git.decorations.enabled": false,
"C_Cpp.inactiveRegionOpacity": 0.55,
"C_Cpp.workspaceParsingPriority": "high",
}